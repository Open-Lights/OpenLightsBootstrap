on: [workflow_dispatch]

name: Release

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: macos-latest
          TARGET: aarch64-apple-darwin

        - os: macos-latest
          TARGET: x86_64-apple-darwin

        - os: ubuntu-latest
          TARGET: x86_64-unknown-linux-gnu

        - os: windows-latest
          TARGET: aarch64-pc-windows-msvc
          EXTENSION: .exe

        - os: windows-latest
          TARGET: x86_64-pc-windows-msvc
          EXTENSION: .exe

    steps:
    - name: Building ${{ matrix.TARGET }}
      run: echo "${{ matrix.TARGET }}"

    - uses: actions/checkout@master
    - name: Install build dependencies - Rustup
      run: |
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --default-toolchain stable --profile default --target ${{ matrix.TARGET }} -y
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Cache Cargo
      uses: Swatinem/rust-cache@v2
      with:
        prefix-key: "v0-rust"
        env-vars: "CARGO CC CFLAGS CXX CMAKE RUST"
        workspaces: ". -> target"
        cache-targets: "true"
        cache-on-failure: "false"
        cache-all-crates: "false"
        save-if: "true"
        cache-provider: "github"

    # For linux, it's necessary to use cross from the git repository to avoid glibc problems
    # Ref: https://github.com/cross-rs/cross/issues/1510
    - name: Install cross for linux
      if: contains(matrix.TARGET, 'linux')
      run: |
        cargo install cross --git https://github.com/cross-rs/cross --rev 1b8cf50d20180c1a394099e608141480f934b7f7

    - name: Install cross for mac and windows
      if: ${{ !contains(matrix.TARGET, 'linux') }}
      run: |
        cargo install cross

    - name: Build
      run: |
        cross build --verbose --release --target=${{ matrix.TARGET }}

    - name: Rename
      run: cp target/${{ matrix.TARGET }}/release/open_lights_bootstrap${{ matrix.EXTENSION }} open_lights_bootstrap-${{ matrix.TARGET }}${{ matrix.EXTENSION }}

    - uses: actions/upload-artifact@master
      with:
        name: open_lights_bootstrap-${{ matrix.TARGET }}${{ matrix.EXTENSION }}
        path: open_lights_bootstrap-${{ matrix.TARGET }}${{ matrix.EXTENSION }}

  upload_release:
    permissions:
      contents: write
    needs: build
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: 'Setup jq'
        uses: dcarbone/install-jq-action@v2
        with:
          version: '1.7'
          force: false

      - name: Get version from Cargo.toml
        id: get_version
        run: echo "::set-output name=version::$(jq -r '.package.version' Cargo.toml)"

      - name: Retrieve Artifacts
        uses: actions/download-artifact@v4
        with:
          path: libs/
          merge-multiple: true

      - name: Upload Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: true
          tag_name: ${{ steps.get_version.outputs.version }}
          prerelease: false
          name: Open Lights Bootstrap ${{ steps.get_version.outputs.version }}
          files: libs/*
          generate_release_notes: true
          overwrite: true
